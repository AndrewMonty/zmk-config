/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// .-------------------------------------------.   .------------------------------------------.
// | ESC         |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP      |
// | TAB / SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ' / SHIFT |
// | CTRL        |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL      |
// `------------------------ | LWR | CMD | SPC |   | SPC | OPT  | RSE | ----------------------`
//                          `------------------`   `-------------------`
                        
                        bindings = <
   &kp ESC        &kp Q &kp W &kp E &kp R    &kp T       &kp Y     &kp U    &kp I     &kp O   &kp P    &kp BSPC
   &mt LSHIFT TAB &kp A &kp S &kp D &lt 3 F  &kp G       &kp H     &lt 3 J  &kp K     &kp L   &kp SEMI &mt RSHIFT SINGLE_QUOTE
   &kp LCTRL      &kp Z &kp X &kp C &kp V    &kp B       &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                              &mo 1 &kp LGUI &kp SPACE   &kp SPACE &kp RALT &mo 2
                        >;
                };

                lower_layer {
// .-----------------------------------.   .--------------------------------------.
// | BTX |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8   |  9  |  0  |      |
// |     | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN  |  UP  | RGT |     | ENTR |
// |     |     |     |     |     |     |   | HME | PGDN | PGUP | END |     |      |
// `---------------- |     |     |     |   |     |      |      | -----------------`
//                  `------------------`   `--------------------`

                        bindings = <
   &bt BT_CLR &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6    &kp N7    &kp N8    &kp N9    &kp N0 &trans
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans &kp ENTER
   &trans     &trans       &trans       &trans       &trans       &trans         &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans &trans
                          	        &trans       &trans       &trans         &trans    &trans    &trans
                        >;
                };

                raise_layer {
// .------------------------------------.   .------------------------------------.
// | `~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  | ENTR |
// |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | SHFT |
// `----------------- |     |     |     |   |     |     |     | -----------------`
//                   `------------------`   `------------------`

                        bindings = <
   &kp GRAVE  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans     &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp ENTER
   &trans     &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp RSHIFT
                    	      &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };

                num_layer {
// .-----------------------------------.  .------------------------------------.
// | F1  | F2  | F3  | F4  | F5  | F6  |  |  *  |  7  |  8  |  9  |  =  |      |
// | F7  | F8  | F9  | F10 | F11 | F12 |  |  /  |  4  |  5  |  6  |  +  | ENTR |
// |     |     |     |     |     |     |  |  0  |  1  |  2  |  3  |  -  |      |
// `---------------- |     |     |     |  |     |     |     | -----------------`
//                  `------------------`  `------------------`

                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4   &kp F5  &kp F6      &kp KP_MULTIPLY &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_EQUAL &trans
   &kp F7 &kp F8 &kp F9 &kp F10  &kp F11 &kp F12     &kp KP_DIVIDE   &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS  &kp ENTER
   &none  &none  &none  &none    &none   &none       &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_MINUS &trans
                        &trans   &trans  &trans      &trans          &trans    &trans
                        >;
                };
        };
};
